{"version":3,"sources":["wario.js"],"names":[],"mappings":"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","file":"wario.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.wario = factory();\n}(this, function () { 'use strict';\n\n  const rps = {\n    core: {\n      replace: /(\\r\\n|\\n|\\r)/gm\n    },\n    each: {\n      matchChunk: /(({{#each(.*?)}})(.*?){{\\/each}})/g,\n      matchAttribute: /{{#each (.*?)}}/,\n      replace: /({{#each (.+?)}})|{{\\/each}}/g\n    },\n    rpv: {\n      match: /{{([^}]*)}}/g,\n      replace: /({{|}})/g\n    }\n  };\n\n  function getNested(obj, key) {\n    const parts = key.split('.');\n    const realKey = parts[0];\n    const attribute = obj[realKey];\n    if (parts.length > 1) {\n      return getNested(attribute, parts.slice(1).join('.'));\n    } else {\n      return attribute;\n    }\n  }\n\n  function parseEach(string, obj) {\n    const pattern = rps.each.matchChunk;\n    const parsed = string.match(pattern).reduce((result, m) => {\n      let key = m.match(rps.each.matchAttribute)[1];\n      let matchVal = getNested(obj, key);\n      let newText = matchVal.map((value) => {\n        return replaceValues(m.replace(rps.each.replace, ''), value);\n      });\n\n      return result.replace(m, newText.join(''));\n    }, string);\n\n    return parsed;\n  }\n\n  function replaceValues(string, obj) {\n    const matches = string.match(rps.rpv.match);\n    if (!matches) { return string; }\n    const parsed = matches.reduce((result, m) => {\n      let key = m.replace(rps.rpv.replace, '');\n      let matchVal = getNested(obj, key);\n      return result.replace(m, matchVal);\n    }, string);\n\n    return parsed;\n  }\n\n  function parseTemplate(template, obj) {\n    const source = template.replace(rps.core.replace,'').trim();\n    if (template.indexOf('{{#each') > -1) {\n      return replaceValues(parseEach(source, obj), obj);\n    }\n    return replaceValues(source, obj);\n  }\n\n  return parseTemplate;\n\n}));"],"sourceRoot":"/source/"}